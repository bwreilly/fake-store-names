# Deployment for backend API
apiVersion: v1
kind: Service
metadata:
  name: core-api
  labels:
    app: core-api
    tier: backend
    role: master
spec:
  ports:
    # the port that this service should serve on
    - port: 5000
      protocol: TCP
      targetPort: 5000
  type: LoadBalancer
  selector:
    app: core-api
    tier: backend
    role: master
---
# Config for nginx, see https://github.com/kubernetes/kubernetes/tree/master/examples/https-nginx
# Regenerate with `kubectl create configmap nginx-api-configmap --from-file=core/nginx.conf`
# apiVersion: v1
#   data:
#     nginx.conf: |
#       server {
#           listen 80;
#
#           server_name _;
#
#           location / {
#               proxy_pass         http://0.0.0.0:5000/;
#               proxy_redirect     off;
#
#               proxy_set_header   Host                 $host;
#               proxy_set_header   X-Real-IP            $remote_addr;
#               proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
#               proxy_set_header   X-Forwarded-Proto    $scheme;
#           }
#       }
#   kind: ConfigMap
# ---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: core-api
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: core-api
        tier: backend
        role: master
    spec:
      containers:
      - image: gcr.io/store-name-generator/api:v1.1.0
        name: api
        ports:
        - containerPort: 5000
      - name: webserver
        image: nginx
        ports:
          - containerPort: 80
